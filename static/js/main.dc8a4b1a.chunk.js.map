{"version":3,"sources":["components/info.js","components/weather.js","components/form.js","App.js","index.js"],"names":["Info","Weather","props","className","data","city","country","temp","pressure","sunset","error","Form","weather","bind","state","e","a","preventDefault","target","elements","value","fetch","process","api_url","json","name","sys","date","Date","setTime","sunsetDate","getHours","getMinutes","getSeconds","this","setState","main","undefined","onSubmit","type","placeholder","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAEe,SAASA,IACpB,OACI,gCACI,6CACA,qE,mCCJG,SAASC,EAAQC,GAC5B,OACI,sBAAKC,UAAU,YAAf,UACID,EAAME,KAAKC,MAEX,gCACI,2CAAcH,EAAME,KAAKC,KAAzB,IAAgCH,EAAME,KAAKE,WAC3C,8CAAiBJ,EAAME,KAAKG,QAC5B,2CAAcL,EAAME,KAAKI,YACzB,yCAAYN,EAAME,KAAKK,aAI/B,mBAAGN,UAAU,QAAb,SAAsBD,EAAME,KAAKM,W,ICwD1BC,E,kDAlEX,WAAYT,GAAQ,IAAD,8BACf,cAAMA,IACDU,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKC,MAAQ,CACTP,KAAM,KACNF,KAAM,KACNC,QAAS,KACTE,SAAU,KACVC,OAAQ,KACRC,MAAO,MATI,E,kFAanB,WAAcK,GAAd,yBAAAC,EAAA,yDACID,EAAEE,mBACIZ,EAAOU,EAAEG,OAAOC,SAASd,KAAKe,OAFxC,iCAK+BC,MAAM,qDAAD,OAAsDhB,EAAtD,kBAAoEiB,mCAApE,kBALpC,cAKcC,EALd,gBAM2BA,EAAQC,OANnC,YAMcpB,EANd,QAQgBqB,KARhB,wBASgBhB,EAASL,EAAKsB,IAAIjB,QAClBkB,EAAO,IAAIC,MACVC,QAAQpB,GACTqB,EAAaH,EAAKI,WAAa,IAAMJ,EAAKK,aAAe,IAAML,EAAKM,aAExEC,KAAKC,SAAS,CACV5B,KAAMH,EAAKgC,KAAK7B,KAChBF,KAAMD,EAAKqB,KACXnB,QAASF,EAAKsB,IAAIpB,QAClBE,SAAUJ,EAAKgC,KAAK5B,SACpBC,OAAQqB,EACRpB,MAAO,KApBvB,2BA4BIwB,KAAKC,SAAS,CACV5B,UAAM8B,EACNhC,UAAMgC,EACN/B,aAAS+B,EACT7B,cAAU6B,EACV5B,YAAQ4B,EACR3B,MAAO,gCAlCf,iD,2EAuCA,WACI,OACI,gCACA,uBAAM4B,SAAUJ,KAAKtB,QAArB,UACI,uBAAO2B,KAAK,OAAOd,KAAK,OAAOe,YAAY,SAC3C,oDAEJ,cAACvC,EAAD,CAASG,KAAM8B,KAAKpB,e,GA7Db2B,IAAMC,WCwBVC,E,4JArBb,WACE,OACE,qBAAKxC,UAAU,UAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,cAACH,EAAD,MAEF,qBAAKG,UAAU,gBAAf,SACE,cAAC,EAAD,mB,GAZEsC,IAAMC,W,YCExBE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dc8a4b1a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Info()  {\r\n    return (\r\n        <div>\r\n            <h2>Weather App</h2>\r\n            <p>Find out the weather in your city</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Weather(props) {\r\n    return (\r\n        <div className=\"infoWeath\">\r\n        {   props.data.city &&\r\n\r\n            <div>\r\n                <p>Location: {props.data.city} {props.data.country}</p>\r\n                <p>Temperature: {props.data.temp}</p>\r\n                <p>Pressure: {props.data.pressure}</p>\r\n                <p>Sunset: {props.data.sunset}</p>\r\n            </div>\r\n        }\r\n\r\n        <p className=\"error\">{props.data.error}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Weather from \"./weather\";\r\n\r\nclass Form extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.weather = this.weather.bind(this);\r\n        this.state = {\r\n            temp: null,\r\n            city: null,\r\n            country: null,\r\n            pressure: null,\r\n            sunset: null,\r\n            error: null\r\n        }\r\n    }\r\n\r\n    async weather(e) {\r\n        e.preventDefault();\r\n        const city = e.target.elements.city.value;\r\n    \r\n        if(city) {\r\n            const api_url  = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_WEATHER_API}&units=metric`);\r\n            const data = await api_url.json();\r\n            \r\n            if(data.name) {\r\n                var sunset = data.sys.sunset;\r\n                var date = new Date();\r\n                date.setTime(sunset);\r\n                var sunsetDate = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\r\n\r\n                this.setState({\r\n                    temp: data.main.temp,\r\n                    city: data.name,\r\n                    country: data.sys.country,\r\n                    pressure: data.main.pressure,\r\n                    sunset: sunsetDate,\r\n                    error: \"\"\r\n                })\r\n\r\n                return;\r\n            }\r\n\r\n        } \r\n\r\n        this.setState({\r\n            temp: undefined,\r\n            city: undefined,\r\n            country: undefined,\r\n            pressure: undefined,\r\n            sunset: undefined,\r\n            error: \"Enter an existing city name\"\r\n        })\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <form onSubmit={this.weather}>\r\n                <input type=\"text\" name=\"city\" placeholder=\"City\" />\r\n                <button>Get Weather</button>\r\n            </form>\r\n            <Weather data={this.state} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Form;","import React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"main\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-sm-5 info\">\n                <Info />\n              </div>\n              <div className=\"col-sm-7 form\">\n                <Form />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}